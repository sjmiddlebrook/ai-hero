diff --git a/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/app/api/chat/route.ts b/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/app/api/chat/route.ts
index f20834c..1b90ffe 100644
--- a/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/app/api/chat/route.ts
+++ b/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/app/api/chat/route.ts
@@ -9,6 +9,7 @@ import { Langfuse } from "langfuse";
 import { env } from "~/env";
 import { streamFromDeepSearch } from "~/deep-search";
 import type { OurMessageAnnotation } from "~/types";
+import { textPartsToContent } from "~/utils";
 
 const langfuse = new Langfuse({
   environment: env.NODE_ENV,
@@ -41,7 +42,9 @@ export async function POST(request: Request) {
     await upsertChat({
       userId: session.user.id,
       chatId: newChatId,
-      title: messages[messages.length - 1]!.content.slice(0, 50) + "...",
+      title:
+        textPartsToContent(messages[messages.length - 1]!.parts).slice(0, 50) +
+        "...",
       messages: messages, // Only save the user's message initially
     });
     currentChatId = newChatId;
@@ -66,12 +69,14 @@ export async function POST(request: Request) {
       // If this is a new chat, send the chat ID to the frontend
       if (!chatId) {
         dataStream.write({
-          'type': 'data',
-
-          'value': [{
-            type: "NEW_CHAT_CREATED",
-            chatId: currentChatId,
-          }]
+          type: "data",
+
+          value: [
+            {
+              type: "NEW_CHAT_CREATED",
+              chatId: currentChatId,
+            },
+          ],
         });
       }
 
@@ -110,8 +115,8 @@ export async function POST(request: Request) {
           annotations.push(annotation);
           // Send it to the client
           dataStream.write({
-            'type': 'message-annotations',
-            'value': [annotation]
+            type: "message-annotations",
+            value: [annotation],
           });
         },
       });
diff --git a/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/system-context.ts b/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/system-context.ts
index 5750147..9c743ec 100644
--- a/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/system-context.ts
+++ b/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/system-context.ts
@@ -1,4 +1,5 @@
 import type { UIMessage } from "ai";
+import { textPartsToContent } from "./utils";
 
 type QueryResultSearchResult = {
   date: string;
@@ -49,7 +50,7 @@ export class SystemContext {
     return this.messages
       .map((message) => {
         const role = message.role === "user" ? "User" : "Assistant";
-        return `<${role}>${message.content}</${role}>`;
+        return `<${role}>${textPartsToContent(message.parts)}</${role}>`;
       })
       .join("\n\n");
   }
diff --git a/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/utils.ts b/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/utils.ts
index ab604f1..29ce4a5 100644
--- a/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/utils.ts
+++ b/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/utils.ts
@@ -1,3 +1,5 @@
+import type { UIMessage } from "ai";
+
 export function isNewChatCreated(data: unknown): data is {
   type: "NEW_CHAT_CREATED";
   chatId: string;
@@ -11,3 +13,14 @@ export function isNewChatCreated(data: unknown): data is {
     typeof data.chatId === "string"
   );
 }
+
+export const textPartsToContent = (parts: UIMessage["parts"]) => {
+  return parts
+    .map((part) => {
+      if (part.type === "text") {
+        return part.text;
+      }
+      return "";
+    })
+    .join("");
+};
