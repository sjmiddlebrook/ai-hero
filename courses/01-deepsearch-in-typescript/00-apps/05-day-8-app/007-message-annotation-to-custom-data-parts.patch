diff --git a/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/app/api/chat/route.ts b/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/app/api/chat/route.ts
index 094a9bb..bdb7f51 100644
--- a/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/app/api/chat/route.ts
+++ b/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/app/api/chat/route.ts
@@ -11,7 +11,6 @@ import { chats } from "~/server/db/schema";
 import { Langfuse } from "langfuse";
 import { env } from "~/env";
 import { streamFromDeepSearch } from "~/deep-search";
-import type { OurMessageAnnotation } from "~/types";
 import { textPartsToContent } from "~/utils";
 
 const langfuse = new Langfuse({
@@ -84,8 +83,6 @@ export async function POST(request: Request) {
         });
       }
 
-      const annotations: OurMessageAnnotation[] = [];
-
       const result = await streamFromDeepSearch({
         messages,
         onFinish: async ({ response }) => {
@@ -101,9 +98,6 @@ export async function POST(request: Request) {
             return;
           }
 
-          // Add the annotations to the last message
-          lastMessage.annotations = annotations;
-
           // Save the complete chat history
           await upsertChat({
             userId: session.user.id,
@@ -115,14 +109,8 @@ export async function POST(request: Request) {
           await langfuse.flushAsync();
         },
         langfuseTraceId: trace.id,
-        writeMessageAnnotation: (annotation) => {
-          // Save the annotation in-memory
-          annotations.push(annotation);
-          // Send it to the client
-          dataStream.write({
-            type: "message-annotations",
-            value: [annotation],
-          });
+        writeMessagePart: (part) => {
+          dataStream.writer.write(part);
         },
       });
 
diff --git a/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/app/chat.tsx b/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/app/chat.tsx
index 958589f..f798010 100644
--- a/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/app/chat.tsx
+++ b/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/app/chat.tsx
@@ -7,14 +7,13 @@ import { useRouter } from "next/navigation";
 import { ChatMessage } from "~/components/chat-message";
 import { SignInModal } from "~/components/sign-in-modal";
 import { isNewChatCreated } from "~/utils";
-import type { UIMessage } from "ai";
-import type { OurMessageAnnotation } from "~/types";
+import type { OurMessage } from "~/types";
 
 interface ChatProps {
   userName: string;
   isAuthenticated: boolean;
   chatId: string | undefined;
-  initialMessages: UIMessage[];
+  initialMessages: OurMessage[];
 }
 
 export const ChatPage = ({
@@ -31,7 +30,7 @@ export const ChatPage = ({
     status,
     // TODO: fix data property
     data,
-  } = useChat({
+  } = useChat<OurMessage>({
     // TODO: fix body property
     body: {
       chatId,
@@ -78,9 +77,6 @@ export const ChatPage = ({
                 parts={message.parts ?? []}
                 role={message.role}
                 userName={userName}
-                annotations={
-                  (message.annotations ?? []) as OurMessageAnnotation[]
-                }
               />
             );
           })}
diff --git a/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/app/page.tsx b/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/app/page.tsx
index 7996efc..d8bc705 100644
--- a/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/app/page.tsx
+++ b/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/app/page.tsx
@@ -5,7 +5,6 @@ import { ChatPage } from "./chat.tsx";
 import { AuthButton } from "../components/auth-button.tsx";
 import { getChats, getChat } from "~/server/db/queries";
 import type { UIMessage } from "ai";
-import type { OurMessageAnnotation } from "~/types.ts";
 
 export default async function HomePage({
   searchParams,
@@ -36,7 +35,6 @@ export default async function HomePage({
       role: msg.role as "user" | "assistant",
       parts: msg.content as UIMessage["parts"],
       content: "",
-      annotations: (msg.annotations ?? []) as OurMessageAnnotation[],
     })) ?? [];
 
   return (
diff --git a/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/components/chat-message.tsx b/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/components/chat-message.tsx
index d219c31..e6bc893 100644
--- a/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/components/chat-message.tsx
+++ b/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/components/chat-message.tsx
@@ -1,16 +1,14 @@
 import ReactMarkdown, { type Components } from "react-markdown";
-import type { UIMessage } from "ai";
 import { useState } from "react";
 import { SearchIcon, LinkIcon } from "lucide-react";
-import type { OurMessageAnnotation } from "~/types";
+import type { OurMessage } from "~/types";
 
-type MessagePart = NonNullable<UIMessage["parts"]>[number];
+type MessagePart = NonNullable<OurMessage["parts"]>[number];
 
 interface ChatMessageProps {
   parts: MessagePart[];
   role: string;
   userName: string;
-  annotations: OurMessageAnnotation[];
 }
 
 const components: Components = {
@@ -81,19 +79,19 @@ const ToolInvocation = ({
   );
 };
 
-const ReasoningSteps = ({
-  annotations,
-}: {
-  annotations: OurMessageAnnotation[];
-}) => {
+const ReasoningSteps = ({ parts }: { parts: MessagePart[] }) => {
   const [openStep, setOpenStep] = useState<number | null>(null);
 
-  if (annotations.length === 0) return null;
+  const newActionParts = parts.filter(
+    (part) => part.type === "data-new-action",
+  );
+
+  if (newActionParts.length === 0) return null;
 
   return (
     <div className="mb-4 w-full">
       <ul className="space-y-1">
-        {annotations.map((annotation, index) => {
+        {newActionParts.map((part, index) => {
           const isOpen = openStep === index;
           return (
             <li key={index} className="relative">
@@ -114,25 +112,25 @@ const ReasoningSteps = ({
                 >
                   {index + 1}
                 </span>
-                {annotation.action.title}
+                {part.data.title}
               </button>
               <div className={`${isOpen ? "mt-1" : "hidden"}`}>
                 {isOpen && (
                   <div className="px-2 py-1">
                     <div className="text-sm italic text-gray-400">
-                      <Markdown>{annotation.action.reasoningText}</Markdown>
+                      <Markdown>{part.data.reasoningText}</Markdown>
                     </div>
-                    {annotation.action.type === "search" && (
+                    {part.data.type === "search" && (
                       <div className="mt-2 flex items-center gap-2 text-sm text-gray-400">
                         <SearchIcon className="size-4" />
-                        <span>{annotation.action.query}</span>
+                        <span>{part.data.query}</span>
                       </div>
                     )}
-                    {annotation.action.type === "scrape" && (
+                    {part.data.type === "scrape" && (
                       <div className="mt-2 flex items-center gap-2 text-sm text-gray-400">
                         <LinkIcon className="size-4" />
                         <span>
-                          {annotation.action.urls
+                          {part.data.urls
                             ?.map((url) => new URL(url).hostname)
                             ?.join(", ")}
                         </span>
@@ -149,12 +147,7 @@ const ReasoningSteps = ({
   );
 };
 
-export const ChatMessage = ({
-  parts,
-  role,
-  userName,
-  annotations,
-}: ChatMessageProps) => {
+export const ChatMessage = ({ parts, role, userName }: ChatMessageProps) => {
   const isAI = role === "assistant";
 
   return (
@@ -168,7 +161,7 @@ export const ChatMessage = ({
           {isAI ? "AI" : userName}
         </p>
 
-        {isAI && <ReasoningSteps annotations={annotations} />}
+        {isAI && <ReasoningSteps parts={parts} />}
 
         <div className="prose prose-invert max-w-none">
           {parts.map((part, index) => {
diff --git a/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/deep-search.ts b/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/deep-search.ts
index 875cd23..99c9e68 100644
--- a/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/deep-search.ts
+++ b/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/deep-search.ts
@@ -1,16 +1,20 @@
-import { streamText, type UIMessage, type StreamTextResult } from "ai";
+import {
+  streamText,
+  type StreamTextResult,
+  type UIMessage,
+  type UIMessageStreamWriter,
+} from "ai";
 import { runAgentLoop } from "./run-agent-loop";
-import type { OurMessageAnnotation } from "./types";
 
 export const streamFromDeepSearch = async (opts: {
   messages: UIMessage[];
   onFinish: Parameters<typeof streamText>[0]["onFinish"];
   langfuseTraceId?: string;
-  writeMessageAnnotation?: (annotation: OurMessageAnnotation) => void;
+  writeMessagePart?: UIMessageStreamWriter["write"];
 }): Promise<StreamTextResult<{}, string>> => {
   return runAgentLoop(opts.messages, {
     langfuseTraceId: opts.langfuseTraceId,
-    writeMessageAnnotation: opts.writeMessageAnnotation,
+    writeMessagePart: opts.writeMessagePart,
     onFinish: opts.onFinish,
   });
 };
diff --git a/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/run-agent-loop.ts b/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/run-agent-loop.ts
index 43ca5d9..5867f37 100644
--- a/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/run-agent-loop.ts
+++ b/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/run-agent-loop.ts
@@ -2,16 +2,21 @@ import { SystemContext } from "./system-context";
 import { getNextAction } from "./get-next-action";
 import { searchSerper } from "./serper";
 import { bulkCrawlWebsites } from "./server/scraper";
-import { streamText, type StreamTextResult, type UIMessage } from "ai";
+import {
+  streamText,
+  type StreamTextResult,
+  type UIMessage,
+  type UIMessageStreamWriter,
+} from "ai";
 import { model } from "~/model";
 import { answerQuestion } from "./answer-question";
-import type { OurMessageAnnotation } from "./types";
+import type { OurMessage } from "./types";
 
 export async function runAgentLoop(
   messages: UIMessage[],
   opts: {
     langfuseTraceId?: string;
-    writeMessageAnnotation?: (annotation: OurMessageAnnotation) => void;
+    writeMessagePart?: UIMessageStreamWriter["write"];
     onFinish: Parameters<typeof streamText>[0]["onFinish"];
   },
 ): Promise<StreamTextResult<{}, string>> {
@@ -24,15 +29,11 @@ export async function runAgentLoop(
     // We choose the next action based on the state of our system
     const nextAction = await getNextAction(ctx, opts);
 
-    // Send the action as an annotation if writeMessageAnnotation is provided
-    if (opts.writeMessageAnnotation) {
-      opts.write({
-        'type': 'message-annotations',
-
-        'value': [{
-          type: "NEW_ACTION",
-          action: nextAction,
-        }]
+    // Send the action as a part if writeMessagePart is provided
+    if (opts.writeMessagePart) {
+      opts.writeMessagePart({
+        type: "data-new-action",
+        data: nextAction,
       });
     }
 
diff --git a/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/server/db/queries.ts b/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/server/db/queries.ts
index 969fb5a..6064b36 100644
--- a/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/server/db/queries.ts
+++ b/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/server/db/queries.ts
@@ -39,7 +39,6 @@ export const upsertChat = async (opts: {
       chatId,
       role: message.role,
       parts: message.parts,
-      annotations: message.annotations,
       order: index,
     })),
   );
diff --git a/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/server/db/schema.ts b/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/server/db/schema.ts
index 7cb82c5..03ca716 100644
--- a/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/server/db/schema.ts
+++ b/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/server/db/schema.ts
@@ -150,7 +150,6 @@ export const messages = createTable("message", {
     .references(() => chats.id),
   role: varchar("role", { length: 255 }).notNull(),
   parts: json("parts").notNull(),
-  annotations: json("annotations"),
   order: integer("order").notNull(),
   createdAt: timestamp("created_at", {
     mode: "date",
diff --git a/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/types.ts b/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/types.ts
index 9aaa41d..e17befa 100644
--- a/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/types.ts
+++ b/courses/01-deepsearch-in-typescript/00-apps/05-day-8-app/src/types.ts
@@ -1,6 +1,9 @@
+import type { UIMessage } from "ai";
 import type { Action } from "./get-next-action";
 
-export type OurMessageAnnotation = {
-  type: "NEW_ACTION";
-  action: Action;
-};
+export type OurMessage = UIMessage<
+  never,
+  {
+    "new-action": Action;
+  }
+>;
